<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HRPortal</name>
    </assembly>
    <members>
        <member name="T:HRPortal.Config">
            <summary>
            Represents configuration settings for the application, including environment settings and email server details.
            </summary>
        </member>
        <member name="P:HRPortal.Config.CurrentEnv">
            <summary>
            Gets or sets the current environment for the application.
            </summary>
        </member>
        <member name="F:HRPortal.Config.FileName">
            <summary>
            The default filename for employee data.
            </summary>
        </member>
        <member name="P:HRPortal.Config.Email">
            <summary>
            Gets or sets the email for the application.
            </summary>
        </member>
        <member name="P:HRPortal.Config.Name">
            <summary>
            Gets or sets the name for the application.
            </summary>
        </member>
        <member name="P:HRPortal.Config.Password">
            <summary>
            Gets or sets the password for the application.
            </summary>
        </member>
        <member name="P:HRPortal.Config.SmtpPort">
            <summary>
            Gets or sets the SMTP port for email sending.
            </summary>
        </member>
        <member name="P:HRPortal.Config.SmtpHost">
            <summary>
            Gets or sets the SMTP host for email sending.
            </summary>
        </member>
        <member name="T:HRPortal.Interfces.IEmployeeService">
            <summary>
             Represents the db operations for an employee.
            </summary>
        </member>
        <member name="M:HRPortal.Services.AuthService.HashPassword(ModelsLib.Employee,System.String)">
            <summary>
            Hashes the password for the provided employee.
            </summary>
            <param name="employee">The employee object containing relevant data.</param>
            <param name="password">The plain text password to be hashed.</param>
            <returns>A hashed password string.</returns>
        </member>
        <member name="M:HRPortal.Services.EmailService.SendEmail(System.String,System.String,System.String,System.String)">
            <summary>
            Sends an email with the specified details.
            </summary>
            <param name="recipientEmail">The recipient's email address.</param>
            <param name="recipientName">The recipient's name.</param>
            <param name="subject">The subject of the email.</param>
            <param name="body">The body of the email.</param>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.FetchAll">
            <summary>
            Gets the list of all employees with their salary.
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Fetch(System.Guid)">
            <summary>
            Gets a specific employee by ID.
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Exist(System.Guid)">
            <summary>
            Check if employee with the id exist
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Exist">
            <summary>
             Check if employee exist
            </summary>
            <returns></returns>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.FetchAll(System.String)">
            <summary>
             Get all employees whose name contain this name
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Save">
            <summary>
            save changes in db
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Add(ModelsLib.Employee)">
            <summary>
            Insert employee data in db
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Add(ModelsLib.Attendance)">
            <summary>
            Insert bulk of attemdances in db
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.Add(ModelsLib.Salary)">
            <summary>
            Insert salary data in db
            </summary>
        </member>
        <member name="M:HRPortal.Services.EmployeeService.SaveTransaction(ModelsLib.Salary,ModelsLib.Employee)">
            <summary>
            initiate and commit transaction in db . rollback in case of exception
            </summary>
            <param name="salary"></param>
            <param name="employee"></param>
            <returns></returns>
        </member>
        <member name="M:HR_Portal.Controllers.AttendanceController.#ctor(HRPortal.Data.HRPortalContext,Microsoft.Extensions.Logging.ILogger{HR_Portal.Controllers.AttendanceController})">
            <summary>
            Initializes a new instance of the <see cref="T:HR_Portal.Controllers.AttendanceController"/> class.
            </summary>
            <param name="context">Database context for HR Portal.</param>
        </member>
        <member name="M:HR_Portal.Controllers.AttendanceController.Index">
            <summary>
            Retrieves and displays the list of attendance records.
            </summary>
            <returns>Attendance index view.</returns>
        </member>
        <member name="M:HR_Portal.Controllers.AttendanceController.FetchAttendanceAsync">
            <summary>
            Asynchronously retrieves attendance data.
            </summary>
            <returns>A list of <see cref="T:ModelsLib.Attendance"/> records.</returns>
        </member>
        <member name="M:HR_Portal.Controllers.AttendanceController.Get(DevExtreme.AspNet.Mvc.DataSourceLoadOptions)">
            <summary>
            Retrieves attendance data with specific load options.
            </summary>
            <param name="loadOptions">Data load options.</param>
            <returns>Loaded attendance data according to specified options.</returns>
        </member>
        <member name="M:HR_Portal.Controllers.AttendanceController.Summary">
            <summary>
            Displays the attendance summary.
            </summary>
            <returns>Summary view.</returns>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.#ctor(Microsoft.Extensions.Logging.ILogger{HR_Portal.Controllers.EmployeeController},HRPortal.Interfces.IEmployeeService,HRPortal.Interfaces.IEmailService,HRPortal.Interfaces.IAuthService)">
            <summary>
            Initializes a new instance of the <see cref="T:HR_Portal.Controllers.EmployeeController"/> class.
            </summary>
            <param name="context">Database context for HR Portal.</param>
            <param name="logger">logger instance</param>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Index">
            <summary>
            Displays the employee index page.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.FetchAll(DevExtreme.AspNet.Mvc.DataSourceLoadOptions)">
            <summary>
            Gets a list of employees with pagination and sorting options.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.DetailsById(System.Guid)">
            <summary>
            Retrieves employee details by ID.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.DetailsByName(System.String)">
            <summary>
            Retrieves employee details by name.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Create">
            <summary>
            Displays the create employee form.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Edit(System.Guid)">
            <summary>
            Displays the edit employee form.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Delete(System.Guid)">
            <summary>
            Displays the delete confirmation page.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Departments(DevExtreme.AspNet.Mvc.DataSourceLoadOptions)">
            <summary>
            Gets a list of departments for the dropdown.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Post(System.String)">
            <summary>
            Creates a new employee.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Create(ModelsLib.Employee)">
            <summary>
            Creates a new employee (alternative POST).
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Put(System.Guid,System.String)">
            <summary>
            Edits an existing employee.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.Deletes(System.Guid)">
            <summary>
            Deletes an employee.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.FetchDepartmentsAsync">
            <summary>
            Gets a list of departments for the dropdown.
            </summary>
        </member>
        <member name="M:HR_Portal.Controllers.EmployeeController.PrintModelErrors">
            <summary>
            Prints model validation errors to the log.
            </summary>
        </member>
        <member name="M:HR_Portal.Models.SeedData.Initialize(System.IServiceProvider)">
            <summary>
            Initializes the seed data for employees, salaries, and attendance.
            </summary>
            <param name="serviceProvider">The service provider for resolving dependencies.</param>
        </member>
    </members>
</doc>
